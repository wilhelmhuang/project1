name: After PR is merged

on:
  pull_request:
    branches:
      - master
    types:
      - closed


jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: windows-latest
    steps:
      - name: check out repo
        uses: actions/checkout@main
        with:
          ref: special-branch
          fetch-depth: 0
      - name: read commits
        run: |
          echo 'COMMITS<<EOF' >> $env:GITHUB_ENV
          git log a32aebc..HEAD --oneline >> $env:GITHUB_ENV
          echo 'hehe' >> $env:GITHUB_ENV
          echo 'EOF' >> $env:GITHUB_ENV
      - name: print env var
        run: |
          echo "${{ env.COMMITS }}"
      - name: get latest tag
        run: |
          echo "latest_tag=$(git tag | sort --version-sort | tail -n1)" >> $env:GITHUB_ENV
          echo "second_latest_tag=$(git tag | sort --version-sort | tail -n2 | head -1)" >> $env:GITHUB_ENV
      - name: print latest tag
        run: |
          echo ${{ env.latest_tag}}
          echo ${{ env.second_latest_tag}}
      - name: Create changelog diff
        id: changelog_diff
        run: |
          sed -n "/^## \[v0.0.1\]/,/^## \[$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))\]/{/^## \[$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))\]/!p;}" CHANGELOG.md > release_notes.md
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          git commit -am "release notes"
          git push
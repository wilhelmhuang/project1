name: After PR is merged

on:
  pull_request:
    branches:
      - master
    types:
      - closed


jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: windows-latest
    steps:
      - name: check out repo
        uses: actions/checkout@main
        with:
          ref: special-branch
          fetch-depth: 0
      - name: read commits
        run: |
          echo 'COMMITS<<EOF' >> $env:GITHUB_ENV
          git log a32aebc..HEAD --oneline >> $env:GITHUB_ENV
          echo 'hehe' >> $env:GITHUB_ENV
          echo 'EOF' >> $env:GITHUB_ENV
      - name: print env var
        run: |
          echo "${{ env.COMMITS }}"
      - name: get latest tag
        run: |
          echo "latest_tag=$(git tag | sort --version-sort | tail -n1)" >> $env:GITHUB_ENV
          echo "second_latest_tag=$(git tag | sort --version-sort | tail -n2 | head -1)" >> $env:GITHUB_ENV
      - name: print latest tag
        run: |
          echo ${{ env.latest_tag}}
          echo ${{ env.second_latest_tag}}
      - name: Create changelog diff
        id: changelog_diff
        run: |
          sed -n '/${{ env.latest_tag }}/,/${{ env.second_latest_tag }}/p' CHANGELOG.md | head -n -1 > release_notes.md
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.latest_tag }}
          release_name: Release ${{ env.latest_tag }}
          body_path: ./release_notes.md
          draft: false
          prerelease: false
      - name: Delete release_notes file
        run: rm release_notes.md